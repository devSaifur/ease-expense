/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as AuthImport } from './routes/_auth'
import { Route as AuthenticatedExpensesExpenseIdImport } from './routes/_authenticated/expenses_.$expenseId'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()
const AuthenticatedProfileLazyImport = createFileRoute(
  '/_authenticated/profile',
)()
const AuthenticatedExpensesLazyImport = createFileRoute(
  '/_authenticated/expenses',
)()
const AuthSignUpLazyImport = createFileRoute('/_auth/sign-up')()
const AuthSignInLazyImport = createFileRoute('/_auth/sign-in')()
const AuthSignUpVerifyLazyImport = createFileRoute('/_auth/sign-up/verify')()

// Create/Update Routes

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const AuthenticatedProfileLazyRoute = AuthenticatedProfileLazyImport.update({
  path: '/profile',
  getParentRoute: () => AuthenticatedRoute,
} as any).lazy(() =>
  import('./routes/_authenticated/profile.lazy').then((d) => d.Route),
)

const AuthenticatedExpensesLazyRoute = AuthenticatedExpensesLazyImport.update({
  path: '/expenses',
  getParentRoute: () => AuthenticatedRoute,
} as any).lazy(() =>
  import('./routes/_authenticated/expenses.lazy').then((d) => d.Route),
)

const AuthSignUpLazyRoute = AuthSignUpLazyImport.update({
  path: '/sign-up',
  getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./routes/_auth/sign-up.lazy').then((d) => d.Route))

const AuthSignInLazyRoute = AuthSignInLazyImport.update({
  path: '/sign-in',
  getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./routes/_auth/sign-in.lazy').then((d) => d.Route))

const AuthSignUpVerifyLazyRoute = AuthSignUpVerifyLazyImport.update({
  path: '/sign-up/verify',
  getParentRoute: () => AuthRoute,
} as any).lazy(() =>
  import('./routes/_auth/sign-up_.verify.lazy').then((d) => d.Route),
)

const AuthenticatedExpensesExpenseIdRoute =
  AuthenticatedExpensesExpenseIdImport.update({
    path: '/expenses/$expenseId',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/_auth/sign-in': {
      id: '/_auth/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof AuthSignInLazyImport
      parentRoute: typeof AuthImport
    }
    '/_auth/sign-up': {
      id: '/_auth/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof AuthSignUpLazyImport
      parentRoute: typeof AuthImport
    }
    '/_authenticated/expenses': {
      id: '/_authenticated/expenses'
      path: '/expenses'
      fullPath: '/expenses'
      preLoaderRoute: typeof AuthenticatedExpensesLazyImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/profile': {
      id: '/_authenticated/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthenticatedProfileLazyImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/expenses/$expenseId': {
      id: '/_authenticated/expenses/$expenseId'
      path: '/expenses/$expenseId'
      fullPath: '/expenses/$expenseId'
      preLoaderRoute: typeof AuthenticatedExpensesExpenseIdImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_auth/sign-up/verify': {
      id: '/_auth/sign-up/verify'
      path: '/sign-up/verify'
      fullPath: '/sign-up/verify'
      preLoaderRoute: typeof AuthSignUpVerifyLazyImport
      parentRoute: typeof AuthImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  AuthRoute: AuthRoute.addChildren({
    AuthSignInLazyRoute,
    AuthSignUpLazyRoute,
    AuthSignUpVerifyLazyRoute,
  }),
  AuthenticatedRoute: AuthenticatedRoute.addChildren({
    AuthenticatedExpensesLazyRoute,
    AuthenticatedProfileLazyRoute,
    AuthenticatedExpensesExpenseIdRoute,
  }),
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/_authenticated"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/sign-in",
        "/_auth/sign-up",
        "/_auth/sign-up/verify"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/expenses",
        "/_authenticated/profile",
        "/_authenticated/expenses/$expenseId"
      ]
    },
    "/_auth/sign-in": {
      "filePath": "_auth/sign-in.lazy.tsx",
      "parent": "/_auth"
    },
    "/_auth/sign-up": {
      "filePath": "_auth/sign-up.lazy.tsx",
      "parent": "/_auth"
    },
    "/_authenticated/expenses": {
      "filePath": "_authenticated/expenses.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/profile": {
      "filePath": "_authenticated/profile.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/expenses/$expenseId": {
      "filePath": "_authenticated/expenses_.$expenseId.tsx",
      "parent": "/_authenticated"
    },
    "/_auth/sign-up/verify": {
      "filePath": "_auth/sign-up_.verify.lazy.tsx",
      "parent": "/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
